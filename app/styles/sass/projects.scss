@use 'colors' as *;

#projects {
  text-align: center;
  padding-bottom: 5rem;

  h2 {
    color: $heading;
    margin-bottom: 50px;
  }

  .date {
    color: var(--text);
  }

  .project-link {
    border: 1px solid #f2f2f2;
    border-radius: 4px;
    transition: 0.2s all;

    &:hover {
      border: 1px solid var(--accent-color);

      .project {
        transition: 0.2s all;
        background: #f2f2f2;
      }
    }
  }

  .grid-container {
    margin: 0 2vw;
  }

  .grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, 400px);
    justify-content: center;
    grid-gap: 1rem;

    &.single {
      padding: 0rem 3rem 4rem;
      grid-template-columns: 1fr 2fr;

      .project-image {
        img {
          max-height: 20em;
        }
      }

      p {
        font-size: 1rem;
      }
    }
  }

  .project {
    position: relative;
    height: 100%;
    margin: 0 auto 30px auto;
    overflow: hidden;
    background: #fff;
    border-radius: 4px;
    display: grid;
    grid-template-columns: 1fr;
    grid-column-gap: 2rem;
    padding: 1rem;
  }

  .project-image {
    margin: auto;

    img {
      max-height: 15em;
      max-width: 20em;
    }
  }

  .project-info {
    h3 {
      font-size: 1.5em;
      font-weight: 300;
      color: $heading;
      margin: 0 0 15px 0;
    }

    p {
      color: $text;
      margin: 0 0 15px 0;
      font-size: 0.9em;
      text-align: left;

      pre {
        display: inline;
        color: var(--accent-color);
      }
    }

    .thumbnail {
      text-align: center;
    }

    .overflow {
      text-overflow: ellipsis;
      display: -webkit-box;
      -webkit-line-clamp: 4;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    .subtle-link {
      padding: 4px 8px;
      background: $dark-color;
      border-radius: 2px;
    }
  }

  .svg-wrapper {
    height: 0;
    margin: 0 auto;
    position: relative;
    top: 10%;
    width: 320px;
  }
}

// .test-box {
//   --border-size: 3px;
//   --border-angle: 0turn;
//   background-image: conic-gradient(from var(--border-angle), #213, #112 50%, #213),
//     conic-gradient(from var(--border-angle), transparent 20%, #08f, #f03);
//   background-size:
//     calc(100% - (var(--border-size) * 2)) calc(100% - (var(--border-size) * 2)),
//     cover;
//   background-position: center center;
//   background-repeat: no-repeat;

//   @keyframes bg-spin {
//     to {
//       --border-angle: 1turn;
//     }
//   }

//   &:hover {
//     animation: bg-spin 3s linear infinite;
//   }
// }

// @property --border-angle {
//   syntax: '<angle>';
//   inherits: true;
//   initial-value: 0turn;
// }